/*global define: false */define(["angular"],function(e){"use strict";e.module("myApp.services",["ngResource"]).value("version","0.1.0").factory("tableServices",["$http","$log",function(e,t){var n={};n.generateTable=function(){t.log("Calling createTable api");return e.get("api/createTable").success(function(e,n,r,i){t.log("createTable response",e);if(!e.error)return e;t.error(e.error)}).error(function(e,t,n,r){})};n.getTableWithSession=function(n){t.log("Calling tableInfoBySession api");return e.get("/api/tableInfoBySession/"+n).success(function(e,n,r,i){t.log("table data:",e);if(e.error){t.error(e.error);return e}return e}).error(function(e,r,i,s){t.log("error retrieving table info for session"+n,e)})};n.joinTable=function(n,r,i){var s={tableId:n,name:r,sessionId:i};return e.post("/api/joinTable",s).success(function(e,n){t.log(e);if(!e.error)return e;t.error(e.error,e.message)}).error(function(e,r){t.error("error joining table "+n,e)})};return n}]).factory("playerServices",["$http","$log",function(e,t){var n={};n.getPlayersOnTable=function(n){return e.get("/api/tableInfo/"+n+"/players").success(function(e,n){t.log(e);if(!e.error)return e;t.error(e.error,e.message)}).error(function(e,r){t.error("error joining table "+n,e)})};n.playMove=function(n){return e.post("/api/playMove",n).success(function(e,r){t.log(e);if(e.error)t.error(e.error,e.message);else{var i={moveData:n};socket.emit("game:player:move",i)}}).error(function(e,n){t.error("error playing move "+$scope.game.table._id,e)})};n.playerLeave=function(n){return e.post("/api/leaveTable",n).success(function(e,r){t.log(e);if(e.error)t.error(e.error,e.message);else{var i={data:n};socket.emit("game:player:leave",i)}}).error(function(e,n){t.error("error leaving table: ",$scope.game.player.name+", session: ",$scope.game.table.session)})};return n}])});